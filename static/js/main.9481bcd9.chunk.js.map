{"version":3,"sources":["components/TextAreaSingle/TextAreaSingle.js","components/CounterLetter/CounterLetter.js","components/Button/Button.js","components/AddPostBlock/AddPostBlock.js","components/NameAndImgUser/NameAndImgUser.js","components/ContentPost/ContentPost.js","components/DetailPost/DetailPost.js","components/UserSinglePost/UserSinglePost.js","components/UserPostBlock/UserPostBlock.js","App.js","reportWebVitals.js","index.js"],"names":["TextAreaSingle","handleChange","placeholder","value","onChange","className","CounterLetter","lengthInputData","Button","classname","disable","handleClick","type","onClick","disabled","AddPostBlock","useState","disableBtn","inputData","blockAddPost","setInputdata","inputDataLength","undefined","length","onSubmit","e","target","checkLengthPost","NameAndImgUser","username","tagname","icon","faUser","ContentPostBlock","post","DetailPost","dayPost","handleDelete","handleEdit","index","faEdit","faTrashAlt","UserSingleBlock","handleSubmit","i","editPost","setEditPost","editText","setEditText","editTextRemoveBlankSpace","replace","UserPostBlock","data","postList","map","App","setDayPost","Date","toLocaleString","year","month","day","hour","minute","setPost","console","log","preventDefault","postCopy","splice","copyPost","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9481bcd9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function TextAreaSingle({handleChange,placeholder,value}){\r\n    return(\r\n      <textarea \r\n        onChange={handleChange} \r\n        className='textarea-post' \r\n        placeholder={placeholder}\r\n        value={value}\r\n      >\r\n      </textarea>\r\n    );\r\n  }\r\n","import React from 'react'\r\n\r\nexport default function CounterLetter({lengthInputData}) {\r\n  return (\r\n    <span className='count-number-text'>{lengthInputData}</span>\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Button({value,classname,disable,handleClick,type}){\r\n    return(\r\n      <div className='btn-wrap'>\r\n        <button type={type} onClick={handleClick} className={classname} disabled={disable}>{value} </button>\r\n      </div>\r\n    )\r\n  }","import React, {useState} from 'react';\r\nimport TextAreaSingle from '../TextAreaSingle/TextAreaSingle';\r\nimport CounterLetter from '../CounterLetter/CounterLetter';\r\nimport Button from '../Button/Button'\r\n\r\nexport default function AddPostBlock({handleClick}){\r\n\r\n    const [blockAddPost,setInputdata]=useState(\r\n      {\r\n        disableBtn:true,\r\n        inputData:'',\r\n      }\r\n    )\r\n    let inputDataLength = 0;\r\n    if(blockAddPost.inputData!==undefined){\r\n      inputDataLength=blockAddPost.inputData.length;\r\n    }\r\n    const handleChange=(e)=>{\r\n      if((e.target.value)!==''){\r\n        setInputdata({\r\n          disableBtn:false,\r\n          inputData:e.target.value,\r\n        });\r\n      }else{\r\n        setInputdata({\r\n          disableBtn:true,\r\n          inputData:'',\r\n        });\r\n      }\r\n    }\r\n\r\n    const resetForm = (e)=>{\r\n      setInputdata({\r\n        disableBtn:true,\r\n        inputData:'',\r\n      })\r\n    }\r\n    \r\n    const checkLengthPost = (e)=>{\r\n      if(e.target.value.length>250){\r\n        setInputdata({\r\n          disableBtn: true,\r\n          inputData: e.target.value,\r\n        })\r\n      }\r\n    }\r\n\r\n    return(\r\n        <div className='post-block'>\r\n          <form onSubmit={(e)=>{handleClick(e,blockAddPost.inputData);resetForm()}}>\r\n\r\n            <div className='textarea-wrap'>\r\n              <TextAreaSingle\r\n                handleChange={(e)=>{handleChange(e);checkLengthPost(e)}} \r\n                placeholder='Tweet about 30 Days Of React...'\r\n                value={blockAddPost.inputData}\r\n              />\r\n              <CounterLetter lengthInputData={250 - inputDataLength} />\r\n            </div>\r\n\r\n            <Button \r\n              disable={blockAddPost.disableBtn} \r\n              value='Add Post' \r\n              classname={`${blockAddPost.disableBtn ? 'btn btn-disabled btn-add-post' : 'btn btn-active btn-add-post'}`}\r\n              type='submit'\r\n            />\r\n          </form>\r\n        </div>\r\n    );\r\n  }","import React from 'react';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faUser,/*faRetweet*/} from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default function NameAndImgUser({username,tagname}) {\r\n    return(\r\n        <div className='top-user-block'>\r\n            <div className='img-user-wrap'>\r\n                <div className='img-circle-wrap'>\r\n                    <FontAwesomeIcon icon={faUser}/>\r\n                </div>\r\n            </div>\r\n            <div className='user-name-wrap'>\r\n                <span>{username}</span>\r\n                <span>{tagname}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function ContentPostBlock({post}) {\r\n    return(\r\n        <div className='content-text-wrap'>\r\n          <p className='content-text'>\r\n            {post}\r\n          </p>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faEdit, faTrashAlt /*, faComment, faHeart */} from '@fortawesome/free-regular-svg-icons';\r\n\r\nexport default function DetailPost({dayPost,handleDelete,handleEdit,index}) {\r\n    return(\r\n        <div className='post-detail-wrap'>\r\n          <div className='post-icon-left'>\r\n            <FontAwesomeIcon icon={faEdit} onClick={()=>handleEdit(index)} />\r\n            <FontAwesomeIcon icon={faTrashAlt} onClick={()=>handleDelete(index)}/>\r\n          </div>\r\n          {/* <div className='post-icon-center'>\r\n            <FontAwesomeIcon icon={faComment} />\r\n            <FontAwesomeIcon icon={faHeart} />\r\n            <FontAwesomeIcon icon={faRetweet} />\r\n          </div> */}\r\n          <div className='date-posted'>\r\n            {dayPost}\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport NameAndImgUser from '../NameAndImgUser/NameAndImgUser'\r\nimport ContentPost from '../ContentPost/ContentPost'\r\nimport DetailPost from '../DetailPost/DetailPost'\r\nimport TextAreaSingle from '../TextAreaSingle/TextAreaSingle'\r\nimport Button from '../Button/Button'\r\n\r\nexport default function UserSingleBlock({username,tagname,post,dayPost,handleDelete,handleSubmit,i}){\r\n    \r\n    const [editPost,setEditPost]=useState(false);\r\n    const [editText,setEditText]=useState(post);\r\n    const editTextRemoveBlankSpace=(editText.replace(/\\s\\s\\s+/g,''))\r\n\r\n    const updatePost=()=>{\r\n        setEditPost(true);\r\n    }\r\n    const cancelUpdatePost=(e)=>{\r\n        setEditText(post);\r\n        setEditPost(false);\r\n    }\r\n    const setStatePost=(e)=>{\r\n        setEditText(editText);\r\n        setEditPost(false);\r\n    }\r\n    const handleChange=(e)=>{\r\n        setEditText(e.target.value)\r\n    }\r\n\r\n    if(editPost===false){\r\n        return(\r\n            <div>\r\n                <NameAndImgUser username={username} tagname={tagname} />\r\n                <ContentPost post={post} />\r\n                <DetailPost \r\n                    dayPost={dayPost} \r\n                    handleDelete={handleDelete} \r\n                    handleEdit={updatePost} \r\n                    index={i}\r\n                />\r\n            </div>\r\n        );\r\n    }else{\r\n        return(\r\n            <form onSubmit={(e)=>{\r\n                    handleSubmit(i,e,editTextRemoveBlankSpace);\r\n                    setStatePost()\r\n                }\r\n            }>\r\n                <TextAreaSingle value={editTextRemoveBlankSpace} handleChange={handleChange}  />\r\n                <div className='btn-edit-wrap '>\r\n                    <Button \r\n                        value='Save' \r\n                        classname='btn btn-small save-btn' \r\n                        type='submit'\r\n                    />\r\n                    <Button \r\n                        value='Cancel' \r\n                        classname='btn btn-small cancel-btn' \r\n                        handleClick={cancelUpdatePost} \r\n                        type='button'\r\n                    />\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport UserSinglePost from '../UserSinglePost/UserSinglePost'\r\n\r\nexport default function UserPostBlock({data,handleDelete,handleSubmit}){\r\n    const postList=data.map((postList,i)=>{\r\n      const {username,tagname,post,dayPost}=postList;\r\n      return(\r\n        <div key={`${username} + ${i}`} className='user-post-block'>\r\n          <UserSinglePost\r\n            username={username}\r\n            tagname={tagname}\r\n            post={post}\r\n            dayPost={dayPost}\r\n            handleDelete={handleDelete}\r\n            i={i}\r\n            handleSubmit = {handleSubmit}\r\n          />\r\n        </div>\r\n      );\r\n    })\r\n    return(\r\n      <div>\r\n        {postList}\r\n      </div>\r\n    )\r\n  }","import './App.css';\r\nimport React, { useState, /* useEffect , useRef */} from 'react'\r\n// import ReactDOM from 'react-dom'\r\n\r\nimport AddPostBlock from './components/AddPostBlock/AddPostBlock'\r\nimport UserPostBlock from './components/UserPostBlock/UserPostBlock';\r\n// import {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\n// import {faUser,/*faRetweet*/} from '@fortawesome/free-solid-svg-icons'\r\n// import {faEdit, faTrashAlt /*, faComment, faHeart */} from '@fortawesome/free-regular-svg-icons'\r\n\r\n// function TextAreaSingle({handleChange,placeholder,value}){\r\n//   return(\r\n//     <textarea \r\n//       onChange={handleChange} \r\n//       className='textarea-post' \r\n//       placeholder={placeholder}\r\n//       value={value}\r\n//     >\r\n//     </textarea>\r\n//   );\r\n// }\r\n// function TextAreaInputPost(props){\r\n//   const {placeholder,handleChange,lengthInput,value}=props;\r\n//   const lengthInputData=250-lengthInput;\r\n//   return(\r\n//     <div className='textarea-wrap'>\r\n//       <TextAreaSingle\r\n//         handleChange={handleChange}\r\n//         placeholder={placeholder}\r\n//         value={value} \r\n//       />\r\n//       <span className='count-number-text'>{lengthInputData}</span>\r\n//     </div>\r\n//   )\r\n// }\r\n// function Button({value,classname,disable,handleClick,type}){\r\n//   return(\r\n//     <div className='btn-wrap'>\r\n//       <button type={type} onClick={handleClick} className={classname} disabled={disable}>{value} </button>\r\n//     </div>\r\n//   )\r\n// }\r\n// function AddPostBlock({handleClick}){\r\n//   const [blockAddPost,setInputdata]=useState(\r\n//     {\r\n//       disableBtn:true,\r\n//       inputData:'',\r\n//     }\r\n//   )\r\n//   let inputDataLength = 0;\r\n//   const handleChangeInput=(e)=>{\r\n//     if((e.target.value)!==''){\r\n//       setInputdata({\r\n//         disableBtn:false,\r\n//         inputData:e.target.value,\r\n//       });\r\n//     }else{\r\n//       setInputdata({\r\n//         disableBtn:true,\r\n//         inputData:'',\r\n//       });\r\n//     }\r\n//   }\r\n//   const resetForm = (e)=>{\r\n//     setInputdata({\r\n//       disableBtn:true,\r\n//       inputData:'',\r\n//     })\r\n//   }\r\n  \r\n//   const checkLengthPost = (e)=>{\r\n//     if(e.target.value.length>250){\r\n//       setInputdata({\r\n//         disableBtn: true,\r\n//         inputData: e.target.value,\r\n//       })\r\n//     }\r\n//   }\r\n//   if(blockAddPost.inputData!==undefined){\r\n//     inputDataLength=blockAddPost.inputData.length;\r\n//   }\r\n//   return(\r\n//       <div className='post-block'>\r\n//         <form onSubmit={(e)=>{handleClick(e,blockAddPost.inputData);resetForm()}}>\r\n//           <TextAreaInputPost \r\n//             lengthInput={inputDataLength}\r\n//             handleChange={(e)=>{handleChangeInput(e);checkLengthPost(e)}} \r\n//             placeholder='Tweet about 30 Days Of React...'\r\n//             value={blockAddPost.inputData}\r\n//           />\r\n//           <Button \r\n//             disable={blockAddPost.disableBtn} \r\n//             value='Add Post' \r\n//             classname={`${blockAddPost.disableBtn ? 'btn btn-disabled btn-add-post' : 'btn btn-active btn-add-post'}`}\r\n//             type='submit'\r\n//           />\r\n//         </form>\r\n//       </div>\r\n//   );\r\n// }\r\n// function NameAndImgUser({username,tagname}){\r\n//   return(\r\n//     <div className='top-user-block'>\r\n//       <div className='img-user-wrap'>\r\n//         <div className='img-circle-wrap'>\r\n//           <FontAwesomeIcon icon={faUser}/>\r\n//         </div>\r\n//       </div>\r\n//       <div className='user-name-wrap'>\r\n//         <span>{username}</span>\r\n//         <span>{tagname}</span>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n// function ContentPostBlock({post}){\r\n//   return(\r\n//     <div className='content-text-wrap'>\r\n//       <p className='content-text'>\r\n//         {post}\r\n//       </p>\r\n//     </div>\r\n//   );\r\n// }\r\n// function DetailPost({dayPost,handleDelete,handleEdit,index}){\r\n//   return(\r\n//     <div className='post-detail-wrap'>\r\n//       <div className='post-icon-left'>\r\n//         <FontAwesomeIcon icon={faEdit} onClick={()=>handleEdit(index)} />\r\n//         <FontAwesomeIcon icon={faTrashAlt} onClick={()=>handleDelete(index)}/>\r\n//       </div>\r\n//       {/* <div className='post-icon-center'>\r\n//         <FontAwesomeIcon icon={faComment} />\r\n//         <FontAwesomeIcon icon={faHeart} />\r\n//         <FontAwesomeIcon icon={faRetweet} />\r\n//       </div> */}\r\n//       <div className='date-posted'>\r\n//         {dayPost}\r\n//       </div>\r\n//     </div>\r\n//   )\r\n// }\r\n// function UserSingleBlock({username,tagname,post,dayPost,handleDelete,handleEdit,i}){\r\n//   const [editPost,setEditPost]=useState(false);\r\n//   const [editText,setEditText]=useState(post);\r\n//   const updatePost=()=>{\r\n//     setEditPost(true);\r\n//   }\r\n//   const cancelUpdatePost=(e)=>{\r\n//     setEditText(post);\r\n//     setEditPost(false);\r\n//   }\r\n//   const submitUpdatePost=(e)=>{\r\n//     setEditText(editText);\r\n//     setEditPost(false);\r\n//   }\r\n//   const handleChangeInputEdit=(e)=>{\r\n//     setEditText(e.target.value)\r\n//   }\r\n//   const editTextRemoveBlankSpace=(editText.replace(/\\s\\s\\s+/g,''))\r\n//   if(editPost===false)\r\n//   {\r\n//     return(\r\n//       <div>\r\n//         <NameAndImgUser username={username} tagname={tagname} />\r\n//         <ContentPostBlock post={post} />\r\n//         <DetailPost dayPost={dayPost} handleDelete={handleDelete} handleEdit={updatePost} index={i}/>\r\n//       </div>\r\n//     );\r\n//   }\r\n//   else\r\n//   {\r\n//     return(\r\n//       <form /*onSubmit={()=>cancelUpdatePost()} */>\r\n//         <TextAreaSingle value={editTextRemoveBlankSpace} handleChange={handleChangeInputEdit}  />\r\n//         <div className='btn-edit-wrap '>\r\n//           <Button \r\n//             value='Save' \r\n//             classname='btn btn-small save-btn' \r\n//             handleClick={\r\n//               (e)=>{handleEdit(i,e,editTextRemoveBlankSpace);submitUpdatePost()}\r\n//             }\r\n//             type='submit'\r\n//           />\r\n//           <Button \r\n//             value='Cancel' \r\n//             classname='btn btn-small cancel-btn' \r\n//             handleClick={cancelUpdatePost} \r\n//             type='button'\r\n//           />\r\n//         </div>\r\n//       </form>\r\n//     );\r\n//   }\r\n// }\r\n// function UserPostBlock({data,handleDelete,handleEdit}){\r\n//   const postList=data.map((postList,i)=>{\r\n//     const {username,tagname,post,dayPost}=postList;\r\n//     return(\r\n//       <div key={`${username} + ${i}`} className='user-post-block'>\r\n//         <UserSingleBlock \r\n//           username={username}\r\n//           tagname={tagname}\r\n//           post={post}\r\n//           dayPost={dayPost}\r\n//           handleDelete={handleDelete}\r\n//           i={i}\r\n//           handleEdit={handleEdit}\r\n//         />\r\n//       </div>\r\n//     );\r\n//   })\r\n//   return(\r\n//     <div>\r\n//       {postList}\r\n//     </div>\r\n//   )\r\n// }\r\nfunction App() {\r\n  const setDayPost=()=>{\r\n    let options = {year: 'numeric', month: 'short', day: 'numeric',hour:'2-digit',minute:'2-digit'};\r\n    let date = new Date();\r\n    return date.toLocaleString('en-US', options);\r\n  }\r\n  const [post,setPost]=useState([\r\n    {\r\n      username:'user',\r\n      tagname:'@user',\r\n      post:\r\n        `30 Days Of React challenge has been started on 1 October and still ongoing. \r\n        It will end the 30 October 2020. It was a real challenge for everyone. \r\n        Students learned quite a lot of concepts. I hope this will help lots of students.`,\r\n      dayPost:setDayPost(),\r\n    },\r\n    {\r\n      username:'user',\r\n      tagname:'@user',\r\n      post:\r\n        `30 Days Of JavaScript challenge has been started on 1 January and ended on 30 January 2020. \r\n         It is of the best JavaScript material on the internet. Students learned quite a lot of concepts. \r\n         I hope this will help lots of students. JavaScript for Ever!`,\r\n      dayPost:setDayPost(),\r\n    },\r\n    {\r\n      username:'user',\r\n      tagname:'@user',\r\n      post:\r\n        `30 Days Of Python challenge has been started on 22 November 2019 and ended on 22 December 2020.\r\n         It is of the best references for Pythonistas, data scientists and aspiring ML.\r\n        Students learned quite a lot of concepts. I hope this will help lots of students. Python is for best friend`,\r\n      dayPost:setDayPost(),\r\n    },\r\n    {\r\n      username:'user',\r\n      tagname:'@user',\r\n      post:\r\n        `30 Days Of Python challenge has been started on 22 November 2019 and ended on 22 December 2020.\r\n         It is of the best references for Pythonistas, data scientists and aspiring ML.\r\n        Students learned quite a lot of concepts. I hope this will help lots of students. Python is for best friend`,\r\n      dayPost:setDayPost(),\r\n    },\r\n    {\r\n      username:'user',\r\n      tagname:'@user',\r\n      post:\r\n        `I have no idea about the coming challenge. \r\n         It could be 30 days of HTML & CSS, ReactNative, Data Analysis or MERN.`,\r\n      dayPost:setDayPost(),\r\n    }\r\n  ]);\r\n  const submitForm=(e,inputData)=>{\r\n    console.log('Submit xong')\r\n    e.preventDefault();\r\n    setPost([\r\n      ...post,\r\n      {\r\n        username:'Anonymous User',\r\n        tagname:'@Anonymous',\r\n        post:inputData,\r\n        dayPost:setDayPost(),\r\n      }\r\n    ])\r\n  }\r\n  const deletePost=(i)=>{\r\n    let postCopy=[...post];\r\n    postCopy.splice(i,1);\r\n    setPost(postCopy);\r\n  }\r\n  const handleSubmitEdit=(i,e,data)=>{\r\n    e.preventDefault();\r\n    let copyPost=[...post];\r\n    copyPost[i].post = data;\r\n    setPost(copyPost);\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <div className='main-wrap'>\r\n        <AddPostBlock handleClick={submitForm}/>\r\n        <UserPostBlock data={post} handleDelete={deletePost} handleSubmit={handleSubmitEdit}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}